0. Разогрев

1. Таймеры

Обьявление
------
function func() {
    alert('Hello');
}
setTimeout(func, 1000, [arguments]); // [arguments] в IE9 не работает
спросить как сделать кроссбраузерно

setTimeout(function() { alert('Hello'); });

setTimeout('alert("Hello");', 1000);

Отмена выполнения
------
var timerId = setTimeout(function() {
    alert('Hello World');
}, 1000 );

clearTimeout(timerId);

NFE
------

var func = function(sum) {
    setTimeout(sum, 1000);
};

------
порядок

Интервалы
-------
var setTimeout(function() { alert('hello') }, 1000);  (не для хром, сафари, так как при алерте таймер продолжает тикать в них)
нарисовать тайминг

Тонкости-

1. Минимальная задержка таймера = приблизитльно 4 мс в современных браузерах
тоесть setTimeout(.., 1) === setTimeout(..., 4);
2. Большинство браузеров (под пк) продолжают выполнять setTimeout/setInterval даже если вкладк неактивна

   Но некоторые Chome, FF, IE10 - снижают минимальную частоту таймера до 1 секунды
3. При работе от батареи браузеры тоже могут снижать частоту
4. При слишком большой загрузке процессора яваскрипт может не успевать обрабатывать таймеры вовремя

Тоесть нельзя опираться что частота в 4мс всегда одинаковая

Пример из реального проекта Worklogger

Ассинхронность, разбивка долгих скриптов

Вызов функции, запланированной setTimeout/setInterval, когда придёт время, добавляется в очередь событий.

В частности, если обернуть код в функцию и запланировать её через setTimeout(f, 0),
то она выполнится заведомо после текущего кода и независимо от него. Таким образом, мы можем отложить обработку события.


function drawDays() {

    for (i = 0; i < daysInMonth; i++) {
        ...
        new A.Tooltip({
           ...

        });
        ...
    }

}
2. Наследование в Javascript или проверка дз + code review


______
Д.З.

1. Написать функцию которая вызывает сама себя 5 раз с таймаутом 1, 2, 3, 4, 5 секунд
2. Написать функцию которая раз в 100 мс выводит в консоль случайное число от 5 до 20.